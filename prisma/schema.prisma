// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String       @default(cuid()) @id
  name          String
  email         String   @unique
  phone         String   @unique
  password      String    
  role          String
  status        String    @default("active")
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  meals         Meal[]
  costs         Cost[]
  memberRents   MemberRent[]
  @@map(name: "users")
}

model Meal {
  id            String  @default(cuid()) @id
  breakFast     Float @default(1) @map("breack_first")
  lunch         Float @default(1)
  dinar         Float @default(1) 
  date          DateTime
  member        User @relation(fields: [memberId], references: [id], onDelete: Cascade)
  memberId      String
  @@map(name:"meals")
  @@index([memberId])
} 

model Cost {
  id            String  @default(cuid()) @id
  amount        Float @default(0)
  date          DateTime
  member        User @relation(fields: [memberId], references: [id], onDelete: Cascade)
  memberId      String
  @@map(name:"costs")
  @@index([memberId])
}

model HomeRent {
  id                 String  @default(cuid()) @id
  unitAmount         Float @default(0) @map(name: "unit_amount")
  additionalAmount   Float @default(0) @map(name: "additional_amount")
  month              String
  year               String
  memberRent         MemberRent[]
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @updatedAt @map(name: "updated_at")
  @@map(name:"home_rents")
}

model MemberRent {
  id                 String  @default(cuid()) @id
  primaryAmount      Float @default(0) @map(name: "primary_amount")
  additionalCost     Json?
  month              String
  year               String
  user               User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId             String
  homeRent           HomeRent @relation(fields: [homeRentId], references: [id], onDelete: Cascade)
  homeRentId         String
  @@map(name:"member_rents")
  @@index([userId])
  @@index([homeRentId])
}